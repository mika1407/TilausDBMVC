@model TilausDBMVC.Models.Logins

@{
    ViewBag.Title = "Login";
}
<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.0/css/all.css"
      integrity="sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ"
      crossorigin="anonymous">

@*JQuery, joka suoritetaan aina, kun sivu latautuu*@
@section scripts {
    <script type="text/javascript">
        $(window).on('load', function () {
            if (@ViewBag.LoginError == 1) {
                $('#LoginRuutu').modal('show');
            }
        });
    </script>
}

<h2>Login</h2>


@using (Html.BeginForm("Authorize", "Home", FormMethod.Post))   //lisätty
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Logins</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.LoginId)

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PassWord, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PassWord, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PassWord, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.LoginErrorMessage, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LoginErrorMessage, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LoginErrorMessage, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <label class="field-validation-error">
            @Html.DisplayFor(model => model.LoginErrorMessage, new { @class = "control-label col-md-2 text-danger" })
        </label>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Log" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@

<br />
@*Button to Open the Modal*@
<p>
    <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#LoginRuutu">
        Avaa modal
    </button>
</p>

@*The Modal*@
<div class="modal" id="LoginRuutu">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title">Kirjautuminen</h1>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("Authorize", "Home", FormMethod.Post, new { id="loginForm" }))   //lisätty
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <h4>Logins, TilausDB-järjestelmä</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.LoginId)

                        <div class="form-group">
                            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PassWord, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.PassWord, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PassWord, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <label class="field-validation-error">
                            @Html.DisplayFor(model => model.LoginErrorMessage, new { @class = "control-label col-md-2 text-danger" })
                        </label>
       
                    </div>
                }

            </div>
            <div class="modal-footer">
                <div>
                    <button type="submit" class="btn btn-info" form="loginForm"><i class="fas fa-check"></i></button>
                    <a href="@Url.Action("Login", "Home")" class="btn btn-info"><i class="fas fa-times"></i></a>
                </div>
            </div>
        </div>
    </div>
</div>
